Index: kernel/classes/ezdatatype.php
===================================================================
--- kernel/classes/ezdatatype.php	(révision 24461)
+++ kernel/classes/ezdatatype.php	(copie de travail)
@@ -674,11 +674,54 @@
     {
     }
 
+    /*!
+     \note Transaction unsafe. If you call several transaction unsafe methods you must enclose
+     the calls within a db transaction; thus within db->begin and db->commit.
+     */
+    function storeModifiedClassAttribute( $classAttribute )
+    {
+    }
+
+    /*!
+     \note Transaction unsafe. If you call several transaction unsafe methods you must enclose
+     the calls within a db transaction; thus within db->begin and db->commit.
+     */
+    function storeVersionedClassAttribute( $classAttribute, $version )
+    {
+        switch ($version) {
+            case eZContentClass::VERSION_STATUS_DEFINED:
+                $this->storeDefinedClassAttribute($classAttribute);
+                break;
+
+            case eZContentClass::VERSION_STATUS_MODIFIED:
+                $this->storeModifiedClassAttribute($classAttribute);
+                break;
+        }
+    }
+
     function preStoreDefinedClassAttribute( $classAttribute )
     {
         $this->preStoreClassAttribute( $classAttribute, $classAttribute->attribute( 'version' ) );
     }
 
+    function preStoreModifiedClassAttribute( $classAttribute )
+    {
+        $this->preStoreClassAttribute( $classAttribute, $classAttribute->attribute( 'version' ) );
+    }
+
+    function preStoreVersionedClassAttribute( $classAttribute, $version )
+    {
+        switch ($version) {
+            case eZContentClass::VERSION_STATUS_DEFINED:
+                $this->preStoreDefinedClassAttribute($classAttribute);
+                break;
+
+            case eZContentClass::VERSION_STATUS_MODIFIED:
+                $this->preStoreModifiedClassAttribute($classAttribute);
+                break;
+        }
+    }
+
     /*!
      Validates the input for a class attribute and returns a validation
      state as defined in eZInputValidator.
Index: kernel/classes/ezcontentclass.php
===================================================================
--- kernel/classes/ezcontentclass.php	(révision 24461)
+++ kernel/classes/ezcontentclass.php	(copie de travail)
@@ -997,44 +997,55 @@
     */
     function storeDefined( $attributes )
     {
+        $this->storeVersioned( $attributes, self::VERSION_STATUS_DEFINED );
+    }
+
+    /*!
+     Stores the current class as a modified version, updates the contentobject_name
+     attribute and recreates the class group entries.
+     \note It will remove classes in the previous and specified version before storing.
+    */
+    function storeVersioned( $attributes, $version )
+    {
+        switch ( $version ) {
+            case self::VERSION_STATUS_DEFINED:
+                $previousVersion = self::VERSION_STATUS_MODIFIED;
+                break;
+            case self::VERSION_STATUS_MODIFIED:
+                $previousVersion = self::VERSION_STATUS_TEMPORARY;
+                break;
+        }
+
         $db = eZDB::instance();
         $db->begin();
 
-        $this->removeAttributes( false, eZContentClass::VERSION_STATUS_DEFINED );
-        $this->removeAttributes( false, eZContentClass::VERSION_STATUS_TEMPORARY );
+        $this->removeAttributes( false, $version );
+        $this->removeAttributes( false, $previousVersion );
         $this->remove( false );
-        $this->setVersion( eZContentClass::VERSION_STATUS_DEFINED, $attributes );
-        // include_once( "kernel/classes/datatypes/ezuser/ezuser.php" );
-        $user = eZUser::currentUser();
-        $user_id = $user->attribute( "contentobject_id" );
-        $this->setAttribute( "modifier_id", $user_id );
+        $this->setVersion( $version, $attributes );
+        $this->setAttribute( "modifier_id", eZUser::currentUser()->attribute( "contentobject_id" ) );
         $this->setAttribute( "modified", time() );
         $this->adjustAttributePlacements( $attributes );
         foreach( $attributes as $attribute )
         {
-            $attribute->storeDefined();
+            $attribute->storeVersioned( $version );
         }
 
         // Set contentobject_name to something sensible if it is missing
-        if ( count( $attributes ) > 0 )
+        if ( count( $attributes ) > 0 && trim( $this->attribute( 'contentobject_name' ) ) == '' )
         {
-            $identifier = $attributes[0]->attribute( 'identifier' );
-            $identifier = '<' . $identifier . '>';
-            if ( trim( $this->attribute( 'contentobject_name' ) ) == '' )
-            {
-                $this->setAttribute( 'contentobject_name', $identifier );
-            }
+            $this->setAttribute( 'contentobject_name', '<' . $attributes[0]->attribute( 'identifier' ) . '>' );
         }
 
         // Recreate class member entries
-        eZContentClassClassGroup::removeClassMembers( $this->ID, eZContentClass::VERSION_STATUS_DEFINED );
-        $classgroups = eZContentClassClassGroup::fetchGroupList( $this->ID, eZContentClass::VERSION_STATUS_TEMPORARY );
-        foreach( $classgroups as $classgroup )
+        eZContentClassClassGroup::removeClassMembers( $this->ID, $version );
+        
+        foreach( eZContentClassClassGroup::fetchGroupList( $this->ID, $previousVersion ) as $classgroup )
         {
-            $classgroup->setAttribute( 'contentclass_version', eZContentClass::VERSION_STATUS_DEFINED );
+            $classgroup->setAttribute( 'contentclass_version', $version );
             $classgroup->store();
         }
-        eZContentClassClassGroup::removeClassMembers( $this->ID, eZContentClass::VERSION_STATUS_TEMPORARY );
+        eZContentClassClassGroup::removeClassMembers( $this->ID, $previousVersion );
 
         eZExpiryHandler::registerShutdownFunction();
         $handler = eZExpiryHandler::instance();
Index: kernel/classes/ezcontentclassattribute.php
===================================================================
--- kernel/classes/ezcontentclassattribute.php	(révision 24461)
+++ kernel/classes/ezcontentclassattribute.php	(copie de travail)
@@ -265,6 +265,15 @@
      */
     function storeDefined()
     {
+        return $this->storeVersioned( eZContentClass::VERSION_STATUS_DEFINED );
+    }
+
+    /*!
+     \note Transaction unsafe. If you call several transaction unsafe methods you must enclose
+     the calls within a db transaction; thus within db->begin and db->commit.
+     */
+    function storeVersioned( $version )
+    {
         $dataType = $this->dataType();
         if ( !$dataType )
         {
@@ -275,7 +284,7 @@
 
         $db = eZDB::instance();
         $db->begin();
-        $dataType->preStoreDefinedClassAttribute( $this );
+        $dataType->preStoreVersionedClassAttribute( $this, $version );
 
         $this->setAttribute( 'serialized_name_list', $this->NameList->serializeNames() );
 
@@ -283,7 +292,7 @@
 
         // store the content data for this attribute
         $info = $dataType->attribute( "information" );
-        $dataType->storeDefinedClassAttribute( $this );
+        $dataType->storeVersionedClassAttribute( $this, $version );
         $db->commit();
 
         return $stored;
Index: kernel/class/view.php
===================================================================
--- kernel/class/view.php	(révision 24461)
+++ kernel/class/view.php	(copie de travail)
@@ -89,6 +89,7 @@
 $tpl->setVariable( 'attributes', $attributes );
 $tpl->setVariable( 'datatypes', $datatypes );
 $tpl->setVariable( 'validation', $validation );
+$tpl->setVariable( 'scheduled_script_id', (int) $Params['ScheduledScriptID'] );
 
 $Result = array();
 $Result['content'] = $tpl->fetch( 'design:class/view.tpl' );
Index: kernel/class/edit.php
===================================================================
--- kernel/class/edit.php	(révision 24461)
+++ kernel/class/edit.php	(copie de travail)
@@ -62,6 +62,19 @@
 
 if ( is_numeric( $ClassID ) )
 {
+    $class = eZContentClass::fetch( $ClassID, true, eZContentClass::VERSION_STATUS_MODIFIED );
+    if ( is_object( $class ) )
+    {
+        require_once( 'kernel/common/template.php' );
+        $tpl = templateInit();
+        $tpl->setVariable( 'class', $class );
+        $tpl->setVariable( "access_type", $GLOBALS['eZCurrentAccess'] );
+
+        return array( 'content' => $tpl->fetch( 'design:class/edit_locked.tpl' ),
+                      'path' => array( array( 'url' => '/class/grouplist/',
+                                              'text' => ezi18n( 'kernel/class', 'Class list' ) ) ) );
+    }
+
     $class = eZContentClass::fetch( $ClassID, true, eZContentClass::VERSION_STATUS_TEMPORARY );
 
     // If temporary version does not exist fetch the current and add temperory class to corresponding group
@@ -582,8 +595,6 @@
 if ( $http->hasPostVariable( 'StoreButton' ) && $canStore )
 {
 
-    $id = $class->attribute( 'id' );
-    $oldClassAttributes = $class->fetchAttributes( $id, true, eZContentClass::VERSION_STATUS_DEFINED );
     $newClassAttributes = $class->fetchAttributes( );
 
     // validate class name and identifier; check presence of class attributes
@@ -611,6 +622,7 @@
     // validate class identifier
 
     $db = eZDB::instance();
+    $db->begin();
     $classCount = $db->arrayQuery( "SELECT COUNT(*) AS count FROM ezcontentclass WHERE  identifier='$classIdentifier' AND version=" . eZContentClass::VERSION_STATUS_DEFINED . " AND id <> $classID" );
     if ( $classCount[0]['count'] > 0 )
     {
@@ -618,10 +630,10 @@
         $basicClassPropertiesValid = false;
     }
     unset( $classList );
-    unset( $db );
 
     if ( !$basicClassPropertiesValid )
     {
+        $db->commit();
         $canStore = false;
         $validation['processed'] = false;
     }
@@ -629,69 +641,31 @@
     {
         if ( !$http->hasSessionVariable( 'ClassCanStoreTicket' ) )
         {
+            $db->commit();
             return $Module->redirectToView( 'view', array( $ClassID ), array( 'Language' => $EditLanguage ) );
         }
 
-        // Class cleanup, update existing class objects according to new changes
-        $db = eZDB::instance();
-        $db->begin();
 
-        $objects = null;
-        $objectCount = eZContentObject::fetchSameClassListCount( $ClassID );
-        if ( $objectCount > 0 )
+        if ( eZContentObject::fetchSameClassListCount( $ClassID ) > 0 )
         {
-            // Delete object attributes which have been removed.
-            foreach ( $oldClassAttributes as $oldClassAttribute )
-            {
-                $attributeExist = false;
-                $oldClassAttributeID = $oldClassAttribute->attribute( 'id' );
-                foreach ( $newClassAttributes as $newClassAttribute )
-                {
-                    $newClassAttributeID = $newClassAttribute->attribute( 'id' );
-                    if ( $oldClassAttributeID == $newClassAttributeID )
-                        $attributeExist = true;
-                }
-                if ( !$attributeExist )
-                {
-                    $objectAttributes = eZContentObjectAttribute::fetchSameClassAttributeIDList( $oldClassAttributeID );
-                    foreach ( $objectAttributes as $objectAttribute )
-                    {
-                        $objectAttributeID = $objectAttribute->attribute( 'id' );
-                        $objectAttribute->removeThis( $objectAttributeID );
-                    }
-                }
-            }
-            $class->storeDefined( $attributes );
-
-            // Add object attributes which have been added.
-            foreach ( $attributes as $newClassAttribute )
-            {
-                $attributeExist = false;
-                $newClassAttributeID = $newClassAttribute->attribute( 'id' );
-                foreach ( $oldClassAttributes as $oldClassAttribute )
-                {
-                    $oldClassAttributeID = $oldClassAttribute->attribute( 'id' );
-                    if ( $oldClassAttributeID == $newClassAttributeID )
-                    {
-                        $attributeExist = true;
-                        break;
-                    }
-                }
-                if ( !$attributeExist )
-                {
-                    $newClassAttribute->initializeObjectAttributes( $objects );
-                }
-            }
+            $script = eZScheduledScript::create( 'syncobjectattributes.php',
+                                                 'extension/ezscriptmonitor/bin/' . eZScheduledScript::SCRIPT_NAME_STRING .
+                                                 ' -s ' . eZScheduledScript::SITE_ACCESS_STRING . ' --classid=' . $ClassID,
+                                                 eZScheduledScript::TYPE_PHP );
+            $script->store();
+            $scheduledScriptID = $script->attribute( 'id' );
+            $class->storeVersioned( $attributes, eZContentClass::VERSION_STATUS_MODIFIED );
         }
         else
         {
-            $class->storeDefined( $attributes );
+            $scheduledScriptID = 0;
+            $class->storeVersioned( $attributes, eZContentClass::VERSION_STATUS_DEFINED );
         }
 
         $db->commit();
-
         $http->removeSessionVariable( 'ClassCanStoreTicket' );
-        return $Module->redirectToView( 'view', array( $ClassID ), array( 'Language' => $EditLanguage ) );
+        return $Module->redirectToView( 'view', array( $ClassID ), array( 'Language' => $EditLanguage,
+                                                                          'ScheduledScriptID' => $scheduledScriptID ) );
     }
 }
 
Index: kernel/class/module.php
===================================================================
--- kernel/class/module.php	(révision 24461)
+++ kernel/class/module.php	(copie de travail)
@@ -40,7 +40,8 @@
     "script" => "view.php",
     "default_navigation_part" => 'ezsetupnavigationpart',
     "params" => array( "ClassID" ),
-    'unordered_params' => array( 'language' => 'Language' ) );
+    'unordered_params' => array( 'language' => 'Language',
+                                 'scriptid' => 'ScheduledScriptID' ) );
 $ViewList["copy"] = array(
     "script" => "copy.php",
     'ui_context' => 'edit',
Index: design/admin/templates/class/edit_locked.tpl
===================================================================
--- design/admin/templates/class/edit_locked.tpl	(révision 0)
+++ design/admin/templates/class/edit_locked.tpl	(révision 0)
@@ -0,0 +1,62 @@
+<div class="message-warning">
+
+<h2><span class="time">[{currentdate()|l10n( shortdatetime )}]</span> {'Class locked'|i18n( 'design/admin/class/edit_locked' )}</h2>
+
+    <p>{'This class has pending modifications defered to cronjob and thus it cannot be edited.'|i18n( 'design/admin/class/edit_locked' )}</p>
+    <p>{'Wait until the script is finished. You might see the status in the %urlstart script monitor%urlend</a>.'|i18n( 'design/admin/class/edit_locked', , hash( '%urlstart', concat( '<a href=', 'scriptmonitor/list'|ezurl, '>' ),
+                                                                                                                                                                  '%urlend', '</a>' ) )}</p>
+    <p>{'To force the modification of the class you may run the following command'|i18n( 'design/admin/class/edit_locked' )}:</p>
+    <pre>php extension/ezscriptmonitor/bin/syncobjectattributes.php -s {$access_type.name|wash} --classid={$class.id}</pre>
+
+</div>
+
+
+<form action={concat( 'class/edit/', $class.id )|ezurl} method="post" name="ClassEdit">
+
+<div class="context-block">
+
+{* DESIGN: Header START *}<div class="box-header"><div class="box-tc"><div class="box-ml"><div class="box-mr"><div class="box-tl"><div class="box-tr">
+
+<h1 class="context-title">{'Edit <%class_name> [Class]'|i18n( 'design/admin/class/edit_locked',, hash( '%class_name', $class.name ) )|wash}</h1>
+
+{* DESIGN: Mainline *}<div class="header-mainline"></div>
+
+{* DESIGN: Header END *}</div></div></div></div></div></div>
+
+{* DESIGN: Content START *}<div class="box-ml"><div class="box-mr"><div class="box-content">
+
+<div class="context-attributes">
+
+<div class="block">
+<label>{'Class'|i18n( 'design/admin/class/edit_locked' )}:</label>
+{$class.name|wash}
+</div>
+
+<div class="block">
+<label>{'Last modifier'|i18n( 'design/admin/class/edit_locked' )}:</label>
+<a href={$class.modifier.contentobject.main_node.url_alias|ezurl}>{$class.modifier.contentobject.name|wash}</a>
+</div>
+
+<div class="block">
+<label>{'Last modified on'|i18n( 'design/admin/class/edit_locked' )}:</label>
+{$class.modified|l10n( shortdatetime )}
+</div>
+
+<p>{'The class will be available for editing after the script has been run by the cronjob.'|i18n( 'design/admin/class/edit_locked' )}</p>
+
+</div>
+
+{* DESIGN: Content END *}</div></div></div>
+
+<div class="controlbar">
+{* DESIGN: Control bar START *}<div class="box-bc"><div class="box-ml"><div class="box-mr"><div class="box-tc"><div class="box-bl"><div class="box-br">
+<div class="block">
+<input class="button" type="submit" name="RetryButton" value="{'Retry'|i18n( 'design/admin/class/edit_locked' )}" />
+<input class="button" type="submit" name="CancelConflictButton" value="{'Cancel'|i18n( 'design/admin/class/edit_locked' )}" />
+</div>
+{* DESIGN: Control bar END *}</div></div></div></div></div></div>
+</div>
+
+</div>
+
+</form>
Index: design/admin/templates/class/view.tpl
===================================================================
--- design/admin/templates/class/view.tpl	(révision 24461)
+++ design/admin/templates/class/view.tpl	(copie de travail)
@@ -13,6 +13,15 @@
 {/section}
 {/section}
 
+{if $scheduled_script_id|gt(0)}
+    <div class="message-warning">
+        <h2><span class="time">[{currentdate()|l10n( shortdatetime )}]</span> {'Class storing deferred'|i18n( 'design/admin/class/view' )}</h2>
+        <p>
+            {'The storing of the class has been deferred because existing objects need to be updated. The process has been scheduled to run in the background and will be started automatically. Please do not edit the class again until the process has finished. You can monitor the progress of the background process here:'|i18n( 'design/admin/class/view' )}<br />
+            <b><a href={concat('scriptmonitor/view/',$scheduled_script_id)|ezurl}>{'Background process monitor'|i18n( 'design/admin/class/view' )}</a></b>
+        </p>
+    </div>
+{/if}
 
 <div class="context-block">
 {* DESIGN: Header START *}<div class="box-header"><div class="box-tc"><div class="box-ml"><div class="box-mr"><div class="box-tl"><div class="box-tr">
